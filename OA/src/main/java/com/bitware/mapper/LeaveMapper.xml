<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitware.mapper.LeaveMapper">

    <resultMap id="leaveMap" type="com.bitware.bean.LeaveInfo">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="leave_type" property="leaveType"/>
        <result column="title" property="title"/>
        <result column="begin_time" property="beginTime"/>
        <result column="end_time" property="endTime"/>
        <result column="reason" property="reason"/>
        <result column="order_no" property="orderNo"/>
        <result column="create_time" property="createTime"/>
        <result column="userName" property="userName"/>
        <result column="leaveTypeName" property="leaveTypeName"/>
        <result column="auditorName" property="auditorName"/>
        <result column="reviewerName" property="reviewerName"/>
        <result column="status" property="status"/>
        <result column="img" property="img"/>
        <result column="date_type" property="dateType"/>
        <result column="statusName" property="statusName"/>
    </resultMap>
    <resultMap id="leaveAuditMap" type="com.bitware.bean.LeaveAudit">
        <result column="auditor" property="auditor"/>
        <result column="type" property="type"/>
        <result column="status" property="status"/>
        <result column="reason" property="reason"/>
        <result column="leave_id" property="leaveId"/>
        <result column="auditorName" property="auditorName"/>
        <result column="typeName" property="typeName"/>
        <result column="time" property="time"/>
    </resultMap>
    <sql id="baseLeave">
        id,user_id,leave_type,title,begin_time,end_time,reason,order_no,status,create_time
    </sql>
    <select id="getLeaveById" resultMap="leaveMap">
        SELECT
        o. NAME AS leaveTypeName,
        o1. NAME AS statusName,
        u. NAME AS userName,
        l.*
        FROM
        `leave` l
        LEFT JOIN `user` u ON l.user_id = u.id
        LEFT JOIN (
        SELECT
        di.*
        FROM
        dictionary_item di
        inner JOIN dictionary dic ON dic.id = di.dictionary_id
        AND dic. CODE = 'LeaveType'
        ) o ON o. CODE = l.leave_type
        LEFT JOIN (
        SELECT
        di.*
        FROM
        dictionary_item di
        inner JOIN dictionary dic ON dic.id = di.dictionary_id
        AND dic. CODE = 'LeaveStatus'
        ) o1 ON o1. DATA = l.`status`
        <if test="id != null and id != 'all'">
            where l.id = #{id}
        </if>
        order by l.create_time desc
    </select>
    <select id="getLeaveByUserId" resultMap="leaveMap">
        SELECT
        o. NAME AS leaveTypeName,
        o1. NAME AS statusName,
        u. NAME AS userName,
        l.*
        FROM
        `leave` l
        LEFT JOIN `user` u ON l.user_id = u.id
        LEFT JOIN (
        SELECT
        di.*
        FROM
        dictionary_item di
        inner JOIN dictionary dic ON dic.id = di.dictionary_id
        AND dic. CODE = 'LeaveType'
        ) o ON o. CODE = l.leave_type
        LEFT JOIN (
        SELECT
        di.*
        FROM
        dictionary_item di
        inner JOIN dictionary dic ON dic.id = di.dictionary_id
        AND dic. CODE = 'LeaveStatus'
        ) o1 ON o1. DATA = l.`status`
        <if test="userId != null and userId != 'all'">
            where l.user_id = #{userId}
        </if>
        ORDER BY
        l.create_time DESC
    </select>
    <select id="getLeaveProcessByLeaveId" resultMap="leaveAuditMap">
        SELECT
            la.*, u. NAME AS AuditorName,
            o. NAME AS typeName
        FROM
            leave_audit la
        LEFT JOIN USER u ON u.id = la.auditor
        LEFT JOIN (
            SELECT
                di.*
            FROM
                dictionary_item di
            inner JOIN dictionary dic ON dic.id = di.dictionary_id
            AND dic.`code` = 'AuditType'
        ) o ON o. CODE = la.type
        WHERE
            la.leave_id = #{leaveId}
        ORDER BY
            o.order_no
    </select>
    <insert id="insertLeave">
       INSERT INTO `leave`
       VALUES
       (#{id}, #{userId}, #{leaveType}, #{title},#{beginTime}, #{endTime}, #{reason}, #{orderNo} ,now(),'0',#{img},#{dateType});
    </insert>
    <insert id="insertAudit">
        INSERT INTO `leave_audit`
         VALUES
        (null, #{type}, #{status}, null,#{leaveId},null);
    </insert>

    <select id="getAuditLeaveByRoleId" resultMap="leaveMap">
            SELECT
                o. NAME AS leaveTypeName,
                o2. NAME AS statusName,
                u. NAME AS userName,
                l.*, o1.type
            FROM
                `leave` l
            RIGHT JOIN (
                SELECT
                    *
                FROM
                    leave_audit la
                WHERE
                        la.`status`  = 0 and
                    type IN (
                        SELECT
                            CODE
                        FROM
                            resource r
                        LEFT JOIN role_auth ra ON ra.resource_id = r.id
                        WHERE
                            ra.role_id = #{roleId}
                    )
            ) o1 ON o1.leave_id = l.id
            LEFT JOIN `user` u ON l.user_id = u.id
            LEFT JOIN (
                SELECT
                    di.*
                FROM
                    dictionary_item di
                inner JOIN dictionary dic ON dic.id = di.dictionary_id
                AND dic. CODE = 'LeaveType'
            ) o ON o. CODE = l.leave_type
            LEFT JOIN (
                SELECT
                    di.*
                FROM
                    dictionary_item di
                inner JOIN dictionary dic ON dic.id = di.dictionary_id
                AND dic. CODE = 'LeaveStatus'
            ) o2 ON o2. DATA = l. STATUS
            where l.status not in (9,10)
            ORDER BY
                l.create_time DESC
    </select>
    <update id="updateLeave">
        UPDATE `LEAVE`
        <set>
            <if test="leaveType != '' and leaveType != null">
                leave_type = #{leaveType},
            </if>
            <if test="title != '' and title != null">
                title = #{title},
            </if>
            <if test="beginTime != null">
                begin_time = #{beginTime},
            </if>
            <if test="reason != '' and reason != null">
                reason = #{reason},
            </if>
            <if test="orderNo != '' and orderNo != null">
                order_no = #{orderNo},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
            <if test="status != '' and status != null">
                status = #{status},
            </if>
            <if test="img != '' and img != null">
                img = #{img},
            </if>
            <if test="dateType != '' and dateType != null">
                date_type = #{dateType},
            </if>
        </set>
        WHERE
        id=#{id}
    </update>
    <update id="updateAudit">
        UPDATE leave_audit
        <set>
            <if test="auditor != '' and auditor != null">
                auditor = #{auditor},
            </if>
            <if test="status != '' and status != null">
                status = #{status},
            </if>
            <if test="reason != '' and reason != null">
                reason = #{reason},
            </if>
            <if test="time != null">
                `time` = #{time},
            </if>

        </set>
        WHERE
        leave_id = #{leaveId} AND `type` = #{type}
    </update>

    <select id="isSameDay" resultMap="leaveMap">
        SELECT
        *
        FROM
        `leave`
        WHERE
        user_id = #{userId}
        AND status  != 9
        AND NOT (
        (
        end_time &lt; #{beginTime}
        OR (begin_time &gt; #{endTime})
        )
        )
    </select>

    <select id="getUserLeaveCountEchartData" resultType="java.util.HashMap">
        SELECT
        u.NAME AS xData,
        sum(
        IF
        (
        l.date_type = 'all',
        datediff( l.end_time, l.begin_time ) + 1,
        0.5
        )
        ) AS yData
        FROM
        `leave` l
        LEFT JOIN USER u ON u.id = l.user_id
        where begin_time  &gt;= #{beginTime} and end_time &lt;= #{endTime} and l.status = 10
        GROUP BY
        l.user_id
    </select>
</mapper>